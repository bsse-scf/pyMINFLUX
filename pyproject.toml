[tool.poetry]
name = "pyminflux"
version = "0.5.0"
description = "Reader, processor, and viewer of MINFLUX raw data."
authors = ["Aaron Ponti <aaron.ponti@bsse.ethz.ch>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/bsse-scf/pyMINFLUX"
documentation = "https://github.com/bsse-scf/pyMINFLUX/wiki"
keywords = ["MINFLUX", "Visualization", "Filtering", "Analysis", "Python"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering"
]
include = [
    "LICENSE.txt",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/bsse-scf/pyMINFLUX/issues"

[tool.black]
line-length = 88
target-version = ['py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.venv
  | _build
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
py_version = 310
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
combine_as_imports = true
known_third_party = ["PySide6", "h5py", "natsort", "numpy", "pandas", "paraview", "pyqtgraph", "pytest", "requests", "scipy", "sklearn", "vispy", "vtkmodules"]

[tool.ruff.lint]
select = ["NPY201"]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
numpy = "^2.0.0"
pandas = "^2.2.3"
pyarrow = "^17.0.0"
pyside6 = "<6.8.0"
pyqtgraph = "^0.13.7"
scipy = "^1.14.0"
scikit-learn = "^1.5.0"
requests = "^2.32"
h5py = "^3.11.0"
vispy = "^0.14.3"
nuitka = "^2.4.5"
natsort = "^8.4.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
ordered-set = "^4.1.0"
pytest-cov = "^4.1.0"
pre-commit = "^3.6.0"
pdoc3 = "^0.10.0"
nuitka = "^2.1.5"
zstandard = "^0.22.0"
ruff = "^0.4.10"

[tool.poetry.scripts]
pyminflux = "pyminflux.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
